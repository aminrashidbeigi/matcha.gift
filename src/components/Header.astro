---
import Navigation from '../components/Navigation.astro'
import { DarkMode, SkipLink } from 'accessible-astro-components'
import { Icon } from 'astro-icon/components'

/**
 * Header Component
 *
 * @description A component that displays the header of the website
 */
---

<header>
  <SkipLink />
  <Navigation>
    <li class="menu-item">
      <a href="/" class={Astro.url.pathname === '/' ? 'is-active' : ''}>Gift Matcher!</a>
    </li>
    <!-- <li class="menu-item">
      <a href="/blog/">Blog</a>
    </li> -->
    <!-- <li class="menu-item">
      <a href="/posts/" class={Astro.url.pathname === '/posts/' ? 'is-active' : ''}>Posts</a>
    </li> -->
    <li class="menu-item">
      <a href="/about/" class={Astro.url.pathname === '/about/' ? 'is-active' : ''}>About</a>
    </li>
    <li class="menu-item type-icon animate-rotate">
      <button id="currency-toggle" class="currency-toggle" aria-label="Toggle currency">
        <Icon name="lucide:dollar-sign" slot="usd" />
        <Icon name="lucide:euro" slot="eur" />
      </button>
    </li>
    <!-- <li class="menu-item has-dropdown">
      <button aria-haspopup="true" aria-expanded="false">
        Theme features
        <Icon name="lucide:chevron-down" size="32" />
      </button>
      <ul class="dropdown-menu">
        <li class="submenu-item">
          <a href="/accessibility-statement">Accessibility statement</a>
        </li>
        <li class="submenu-item">
          <a href="/accessible-components">Accessible components</a>
        </li>
        <li class="submenu-item">
          <a href="/color-contrast-checker">Color contrast checker</a>
        </li>
        <li class="submenu-item">
          <a href="/markdown-page/">Markdown page</a>
        </li>
        <li class="submenu-item">
          <a href="/mdx-page/">MDX page</a>
        </li>
        <li class="submenu-item">
          <a href="/404-page">404 page</a>
        </li>
      </ul>
    </li> -->
    <!-- <li class="menu-item highlight">
      <a href="https://accessible-astro.incluud.dev/">Docs </a>
    </li> -->
    <!-- <li class="menu-item type-icon animate-rotate">
      <a href="https://github.com/markteekman/accessible-astro-starter">
        <Icon name="lucide:github" />
        <span class="sr-only">Go to the GitHub page</span>
      </a>
    </li> -->
    <li class="menu-item type-icon animate-rotate">
      <DarkMode>
        <Icon name="lucide:moon" slot="light" />
        <Icon name="lucide:sun" slot="dark" />
      </DarkMode>
    </li>
  </Navigation>
</header>

<style lang="scss" is:global>
  header {
    .type-icon {
      display: block;
      margin-inline: -7px;

      svg {
        inline-size: 30px;
        block-size: 30px;
      }
    }

    .currency-toggle {
      transition: color 0.2s ease-in-out;
      cursor: pointer;
      border: none;
      background: none;
      padding: 0;
      color: var(--link-color);

      &:hover {
        color: var(--link-hover-color);
      }

      svg {
        display: none;
        inline-size: 30px;
        block-size: 30px;
      }

      &[data-currency='USD'] svg[slot='usd'],
      &[data-currency='EUR'] svg[slot='eur'] {
        display: block;
      }
    }
  }
</style>

<script>
  // Initialize currency state
  function initCurrency() {
    const currentCurrency = localStorage.getItem('currency') || 'EUR'
    document.documentElement.setAttribute('data-currency', currentCurrency)
    // Set on all currency-toggle buttons
    document.querySelectorAll('.currency-toggle').forEach((toggle) => {
      toggle.setAttribute('data-currency', currentCurrency)
    })
  }

  // Initialize on page load
  initCurrency()

  // Handle currency toggle
  document.querySelectorAll('.currency-toggle').forEach((toggle) => {
    toggle.addEventListener('click', () => {
      const currentCurrency = document.documentElement.getAttribute('data-currency')
      const newCurrency = currentCurrency === 'USD' ? 'EUR' : 'USD'
      localStorage.setItem('currency', newCurrency)
      document.documentElement.setAttribute('data-currency', newCurrency)
      document.querySelectorAll('.currency-toggle').forEach((btn) => {
        btn.setAttribute('data-currency', newCurrency)
      })
      window.dispatchEvent(new CustomEvent('currencyChange', { detail: newCurrency }))
    })
  })

  // Re-initialize on navigation
  document.addEventListener('astro:page-load', initCurrency)

  // Listen for the 'mobileMenuToggled' event and call initCurrency
  window.addEventListener('mobileMenuToggled', initCurrency)
</script>
